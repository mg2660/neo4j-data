(.venv) [ec2-user@ip-172-31-87-237 TinyLLM]$ grep -R "proxies=" .
./.venv/lib/python3.9/site-packages/pip/_vendor/requests/adapters.py:        self, request, stream=False, timeout=None, verify=True, cert=None, proxies=None
./.venv/lib/python3.9/site-packages/pip/_vendor/requests/adapters.py:    def get_connection_with_tls_context(self, request, verify, proxies=None, cert=None):
./.venv/lib/python3.9/site-packages/pip/_vendor/requests/adapters.py:    def get_connection(self, url, proxies=None):
./.venv/lib/python3.9/site-packages/pip/_vendor/requests/adapters.py:        self, request, stream=False, timeout=None, verify=True, cert=None, proxies=None
./.venv/lib/python3.9/site-packages/pip/_vendor/requests/adapters.py:                request, verify, proxies=proxies, cert=cert
./.venv/lib/python3.9/site-packages/pip/_vendor/requests/adapters.py:            proxies=proxies,
./.venv/lib/python3.9/site-packages/pip/_vendor/requests/sessions.py:        proxies=None,
./.venv/lib/python3.9/site-packages/pip/_vendor/requests/sessions.py:                    proxies=proxies,
./.venv/lib/python3.9/site-packages/pip/_vendor/requests/sessions.py:        proxies=None,
./.venv/lib/python3.9/site-packages/urllib3/contrib/emscripten/fetch.py:            to_js([_STREAMING_WORKER_CODE], create_pyproxies=False),
./.venv/lib/python3.9/site-packages/requests/adapters.py:        self, request, stream=False, timeout=None, verify=True, cert=None, proxies=None
./.venv/lib/python3.9/site-packages/requests/adapters.py:    def get_connection(self, url, proxies=None):
./.venv/lib/python3.9/site-packages/requests/adapters.py:        self, request, stream=False, timeout=None, verify=True, cert=None, proxies=None
./.venv/lib/python3.9/site-packages/requests/adapters.py:            proxies=proxies,
./.venv/lib/python3.9/site-packages/requests/sessions.py:        proxies=None,
./.venv/lib/python3.9/site-packages/requests/sessions.py:                    proxies=proxies,
./.venv/lib/python3.9/site-packages/requests/sessions.py:        proxies=None,
./.venv/lib/python3.9/site-packages/openai/_base_client.py:            proxies=proxies,
./.venv/lib/python3.9/site-packages/openai/_base_client.py:            proxies=proxies,
./.venv/lib/python3.9/site-packages/openai/_base_client.py:            proxies=proxies,
./.venv/lib/python3.9/site-packages/openai/_base_client.py:            proxies=proxies,
./.venv/lib/python3.9/site-packages/openai/cli/_cli.py:        proxies=proxies or None,
./.venv/lib/python3.9/site-packages/openai-1.3.7.dist-info/METADATA:        proxies="http://my.test.proxy.example.com",
./.venv/lib/python3.9/site-packages/weaviate/client_executor.py:            proxies=config.proxies,
./.venv/lib/python3.9/site-packages/weaviate/connect/v4.py:            proxies=self._proxies,
./.venv/lib64/python3.9/site-packages/pip/_vendor/requests/adapters.py:        self, request, stream=False, timeout=None, verify=True, cert=None, proxies=None
./.venv/lib64/python3.9/site-packages/pip/_vendor/requests/adapters.py:    def get_connection_with_tls_context(self, request, verify, proxies=None, cert=None):
./.venv/lib64/python3.9/site-packages/pip/_vendor/requests/adapters.py:    def get_connection(self, url, proxies=None):
./.venv/lib64/python3.9/site-packages/pip/_vendor/requests/adapters.py:        self, request, stream=False, timeout=None, verify=True, cert=None, proxies=None
./.venv/lib64/python3.9/site-packages/pip/_vendor/requests/adapters.py:                request, verify, proxies=proxies, cert=cert
./.venv/lib64/python3.9/site-packages/pip/_vendor/requests/adapters.py:            proxies=proxies,
./.venv/lib64/python3.9/site-packages/pip/_vendor/requests/sessions.py:        proxies=None,
./.venv/lib64/python3.9/site-packages/pip/_vendor/requests/sessions.py:                    proxies=proxies,
./.venv/lib64/python3.9/site-packages/pip/_vendor/requests/sessions.py:        proxies=None,
./.venv/lib64/python3.9/site-packages/urllib3/contrib/emscripten/fetch.py:            to_js([_STREAMING_WORKER_CODE], create_pyproxies=False),
./.venv/lib64/python3.9/site-packages/requests/adapters.py:        self, request, stream=False, timeout=None, verify=True, cert=None, proxies=None
./.venv/lib64/python3.9/site-packages/requests/adapters.py:    def get_connection(self, url, proxies=None):
./.venv/lib64/python3.9/site-packages/requests/adapters.py:        self, request, stream=False, timeout=None, verify=True, cert=None, proxies=None
./.venv/lib64/python3.9/site-packages/requests/adapters.py:            proxies=proxies,
./.venv/lib64/python3.9/site-packages/requests/sessions.py:        proxies=None,
./.venv/lib64/python3.9/site-packages/requests/sessions.py:                    proxies=proxies,
./.venv/lib64/python3.9/site-packages/requests/sessions.py:        proxies=None,
./.venv/lib64/python3.9/site-packages/openai/_base_client.py:            proxies=proxies,
./.venv/lib64/python3.9/site-packages/openai/_base_client.py:            proxies=proxies,
./.venv/lib64/python3.9/site-packages/openai/_base_client.py:            proxies=proxies,
./.venv/lib64/python3.9/site-packages/openai/_base_client.py:            proxies=proxies,
./.venv/lib64/python3.9/site-packages/openai/cli/_cli.py:        proxies=proxies or None,
./.venv/lib64/python3.9/site-packages/openai-1.3.7.dist-info/METADATA:        proxies="http://my.test.proxy.example.com",
./.venv/lib64/python3.9/site-packages/weaviate/client_executor.py:            proxies=config.proxies,
./.venv/lib64/python3.9/site-packages/weaviate/connect/v4.py:            proxies=self._proxies,
